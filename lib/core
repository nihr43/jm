#!/bin/sh

core::list () {
  for i in `ls $JM_DIR/`; do
#    IP=`cat $JM_DIR/$i/jail.conf | grep '#jm_managed' | grep '{host.hostname = "'$i'";' | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'`

    if [ -z `jls | sed 1d | grep $i` ]; then
      echo -e "$i Stopped"
    else
      echo -e "$i Running"
    fi
  done
}


core::start () {
  service jail start $JAIL_NAME
#echo `hostname` > $JAIL_DIR/$JAIL_NAME/lock
#  jail -f $JAIL_DIR/$JAIL_NAME/jail.conf -c $JAIL_NAME
}


core::stop () {
  service jail stop $JAIL_NAME
  #jail -f $JAIL_DIR/$JAIL_NAME/.jail.conf -r $JAIL_NAME
  #umount $JAIL_DIR/$JAIL_NAME/$JAIL_NAME/dev/fd
  #umount $JAIL_DIR/$JAIL_NAME/$JAIL_NAME/dev
  #umount $JAIL_DIR/$JAIL_NAME/$JAIL_NAME/proc
  #rm $JAIL_DIR/$JAIL_NAME/lock
}


core::restart () {
  service jail restart $JAIL_NAME
}


core::create () {
  IMAGE='.12.0-RELEASE-base.txz'
#  util::checkenv
  [ -e $JM_DIR/$JAIL_NAME ] && {
    echo "$JAIL_NAME exists"
    exit 1
  }

  echo "creating $JAIL_NAME"
  mkdir $JM_DIR/$JAIL_NAME
  tar xpvf $JM_DIR/$IMAGE -C $JM_DIR/$JAIL_NAME
#  util::update_conf create $JAIL_NAME
#  util::bootstrap $JAIL_NAME
}

core::delete () {
  [ -e $JM_DIR/$JAIL_NAME ] || {
    echo "$JAIL_NAME does not exist"
    exit 1
  }

  echo -n "deleting $JAIL_NAME"
  service jail onestop $JAIL_NAME

  chflags -R noschg $JM_DIR/$JAIL_NAME
  rm -rf $JM_DIR/$JAIL_NAME
  util::update_conf delete $JAIL_NAME
}
